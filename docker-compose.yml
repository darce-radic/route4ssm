version: '3.8'

services:
  # Backend API Service
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: route4ssm-backend
    ports:
      - "3009:3009"
    environment:
      - NODE_ENV=production
      - PORT=3009
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3009/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - route4ssm-network

  # Frontend Web Client
  frontend:
    build:
      context: ./web-client
      dockerfile: Dockerfile
    container_name: route4ssm-frontend
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
      - PORT=8080
      - BACKEND_URL=http://backend:3009
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - route4ssm-network

  # Optional: Nginx Reverse Proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: route4ssm-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - route4ssm-network
    profiles:
      - production

networks:
  route4ssm-network:
    driver: bridge

volumes:
  route4ssm-data: 